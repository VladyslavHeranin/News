{"version":3,"sources":["reducers/pageRedu.js","actions/pages.js","components/navigation.jsx","components/item.js","components/items.jsx","App.js","reportWebVitals.js","reducers/index.js","index.js"],"names":["NEWS","NEWEST","ASK","SHOW","JOBS","defaultState","currentTopik","posts","setNews","topik","type","payload","setNewest","setAsk","setShow","setJobs","News","page","dispatch","a","axios","get","response","data","alert","Newest","Ask","Jobs","Show","Navigation","setCurrent","current","sort","useDispatch","sortHandler","className","onClick","arrSort","b","title","domain","time","Item","item","href","url","undefined","time_ago","Items","useState","setPage","setSort","isAuth","useSelector","state","useEffect","map","id","prevPage","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3cf0f122.chunk.js","sourcesContent":["const NEWS = \"NEWS\"\r\nconst NEWEST = \"NEWEST\"\r\nconst ASK = \"ASK\"\r\nconst SHOW = \"SHOW \"\r\nconst JOBS = \"JOBS \"\r\n\r\n\r\nconst defaultState = {\r\n    currentTopik: [],\r\n    posts: 0,\r\n}\r\n\r\nexport default function topikReducer(state = defaultState, action) {\r\n\r\n    switch (action.type) {\r\n        case NEWS:\r\n            return {\r\n                ...state,\r\n                currentTopik: action.payload,\r\n                posts: 10,\r\n                type: \"News\",\r\n            }\r\n        case NEWEST:\r\n            return {\r\n                ...state,\r\n                currentTopik: action.payload,\r\n                posts: 12,\r\n                type: \"Newest\"\r\n            }\r\n        case ASK:\r\n            return {\r\n                ...state,\r\n                currentTopik: action.payload,\r\n                posts: 2,\r\n                type: \"Ask\"\r\n            }\r\n        case SHOW:\r\n            return {\r\n                ...state,\r\n                currentTopik: action.payload,\r\n                posts: 2,\r\n                type: \"Show\"\r\n            }\r\n        case JOBS:\r\n            return {\r\n                ...state,\r\n                currentTopik: action.payload,\r\n                posts: 1,\r\n                type: \"Jobs\"\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const setNews = topik => ({ type: NEWS, payload: topik })\r\n\r\nexport const setNewest = topik => ({ type: NEWEST, payload: topik })\r\n\r\nexport const setAsk = topik => ({ type: ASK, payload: topik })\r\n\r\nexport const setShow = topik => ({ type: SHOW, payload: topik })\r\n\r\nexport const setJobs = topik => ({ type: JOBS, payload: topik })\r\n\r\n","import axios from \"axios\"\r\nimport { setNews, setNewest, setAsk, setShow, setJobs } from \"../reducers/pageRedu\"\r\n\r\n\r\nexport const News = (page) => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await axios.get(`https://api.hnpwa.com/v0/news/${page}.json`)\r\n            dispatch(setNews(response.data))\r\n\r\n        } catch (error) {\r\n            alert(error)\r\n        }\r\n    }\r\n}\r\n\r\nexport const Newest = (page) => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await axios.get(`https://api.hnpwa.com/v0/newest/${page}.json`)\r\n            dispatch(setNewest(response.data))\r\n\r\n        } catch (error) {\r\n            alert(error)\r\n        }\r\n    }\r\n}\r\n\r\nexport const Ask = (page) => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await axios.get(`https://api.hnpwa.com/v0/ask/${page}.json`)\r\n            dispatch(setAsk(response.data))\r\n\r\n        } catch (error) {\r\n            alert(error)\r\n        }\r\n    }\r\n}\r\n\r\nexport const Jobs = (page) => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await axios.get(`https://api.hnpwa.com/v0/jobs/${page}.json`)\r\n            dispatch(setJobs(response.data))\r\n\r\n        } catch (error) {\r\n            alert(error)\r\n        }\r\n    }\r\n}\r\n\r\nexport const Show = (page) => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await axios.get(`https://api.hnpwa.com/v0/show/${page}.json`)\r\n            dispatch(setShow(response.data))\r\n\r\n        } catch (error) {\r\n            alert(error)\r\n        }\r\n    }\r\n}","import React from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { setNews } from \"../reducers/pageRedu\"\r\nimport { setNewest } from \"../reducers/pageRedu\"\r\nimport { setAsk } from \"../reducers/pageRedu\"\r\nimport { setShow } from \"../reducers/pageRedu\"\r\nimport { setJobs } from \"../reducers/pageRedu\"\r\n\r\n\r\nexport const Navigation = ({ setCurrent, current, type , sort }) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const sortHandler = (type) => {\r\n        switch (type) {\r\n            case \"News\":\r\n                return dispatch(setNews(current));\r\n            case \"Newest\":\r\n                return dispatch(setNewest(current));\r\n            case \"Ask\":\r\n                return dispatch(setAsk(current));\r\n            case \"Jobs\":\r\n                return dispatch(setJobs(current));\r\n            case \"Show\":\r\n                return dispatch(setShow(current));\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"item\">\r\n            <div className={sort}>\r\n                <div className=\"sort_nav\" onClick={() => {\r\n                    setCurrent(arrSort => arrSort.sort((a, b) => (a.title > b.title) ? 1 : -1))\r\n                    sortHandler(type)\r\n                    setCurrent([])\r\n                }}  >\r\n                    <h3 className=\"sort_button\">TITLE</h3>\r\n                    <p className=\"sort_param\">sort A-Z</p>\r\n\r\n                </div>\r\n                <div className=\"sort_nav\" onClick={() => {\r\n                    setCurrent(arrSort => arrSort.sort((a, b) => (a.domain > b.domain) ? 1 : -1))\r\n                    sortHandler(type)\r\n                    setCurrent([])\r\n                }} >\r\n                    <h3 className=\"sort_button\"> DOMAIN</h3>\r\n                    <p className=\"sort_param\">sort A-Z</p>\r\n                </div>\r\n                <div className=\"sort_nav\" onClick={() => {\r\n                    setCurrent(arrSort => arrSort.sort((a, b) => (a.time > b.time) ? 1 : -1))\r\n                    sortHandler(type)\r\n                    setCurrent([])\r\n                }}>\r\n                    <h3 className=\"sort_button\">DATE</h3>\r\n                    <p className=\"sort_param\">sort by date</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n","import React from \"react\"\r\n\r\nexport const Item = ({ item }) => {\r\n\r\n        return (<div className=\"item\"   >\r\n\r\n                <a href={item.url} className=\"value_title\">\r\n                        <span className=\"value_name\">Title: </span>    <span className=\"value\">{item.title}</span>\r\n                </a>\r\n\r\n                {item.domain !== undefined ?\r\n                        <p className=\"value_title\">  <span className=\"value_name\">Domain: </span>  <span className=\"value\">{item.domain}</span> </p>\r\n                        :\r\n                        <p className=\"value_title\"> <span className=\"value_name\">Domain: </span>  <span className=\"value\">domain not specified</span> </p>\r\n                }\r\n\r\n                <p className=\"value_title\"> <span className=\"value_name\">Time: </span>  <span className=\"value\"> {item.time_ago}</span></p>\r\n        </div>)\r\n}","import React, { useState, useEffect } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { News } from \"../actions/pages\"\r\nimport { Newest } from \"../actions/pages\"\r\nimport { Ask } from \"../actions/pages\"\r\nimport { Jobs } from \"../actions/pages\"\r\nimport { Show } from \"../actions/pages\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { Navigation } from \"./navigation\"\r\nimport { Item } from \"./item\"\r\n\r\nexport const Items = () => {\r\n\r\n    const [page, setPage] = useState(1)\r\n    const [current, setCurrent] = useState([])\r\n    const [sort, setSort] = useState(\"active\")\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const isAuth = useSelector(state => state.topik)\r\n\r\n    useEffect(() => {\r\n        dispatch(News(page))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setCurrent(() => [...current, ...isAuth.currentTopik])\r\n    }, [isAuth])\r\n\r\n\r\n    const activeButton = () => {\r\n        setSort(\"active_navigation\")\r\n    }\r\n\r\n    const noneActiveButton = () => {\r\n        setSort(\"active\")\r\n    }\r\n\r\n    useEffect(() => {\r\n        switch (isAuth.type) {\r\n            case \"News\":\r\n                return dispatch(News(page));\r\n            case \"Newest\":\r\n                return dispatch(Newest(page));\r\n            case \"Ask\":\r\n                return dispatch(Ask(page));\r\n            case \"Jobs\":\r\n                return dispatch(Jobs(page));\r\n            case \"Show\":\r\n                return dispatch(Show(page));\r\n        }\r\n    }, [page])\r\n\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col s12 offset-s0\">\r\n\r\n                <div className=\"card blue white\">\r\n                    <div className=\"card-content\">\r\n\r\n                        <div className=\"flex\">\r\n\r\n\r\n                            <div className=\"navigation\">\r\n\r\n                                <button\r\n                                    className=\"btn\"\r\n                                    onClick={() => {\r\n                                        setCurrent([])\r\n                                        setPage(1)\r\n                                        dispatch(News(page))\r\n                                    }}\r\n                                >\r\n                                    News\r\n                                </button>\r\n                                <button\r\n                                    className=\"btn\"\r\n                                    onClick={() => {\r\n                                        setCurrent([])\r\n                                        setPage(1)\r\n                                        dispatch(Newest(page))\r\n                                    }}\r\n                                >\r\n                                    Newest\r\n                                </button>\r\n                                <button\r\n                                    className=\"btn\"\r\n                                    onClick={() => {\r\n                                        setCurrent([])\r\n                                        setPage(1)\r\n                                        dispatch(Ask(page))\r\n                                    }}\r\n                                >\r\n                                    Ask\r\n                                </button>\r\n                                <button\r\n                                    className=\"btn\"\r\n                                    onClick={() => {\r\n                                        setCurrent([])\r\n                                        setPage(1)\r\n                                        dispatch(Show(page))\r\n                                    }}\r\n                                >\r\n                                    Show\r\n                                </button>\r\n                                <button\r\n                                    className=\"btn\"\r\n                                    onClick={() => {\r\n                                        setCurrent([])\r\n                                        setPage(1)\r\n                                        dispatch(Jobs(page))\r\n                                    }}\r\n                                >\r\n                                    Jobs\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <div className=\"list\">\r\n\r\n                                    {sort !== \"active_navigation\" ?\r\n                                        <div className=\"sort\" onClick={() => activeButton()} >CLOSE</div>\r\n                                        :\r\n                                        <div className=\"sort\" onClick={() => noneActiveButton()} >SORT</div>}\r\n\r\n                                    < Navigation setCurrent={setCurrent} current={current} type={isAuth.type} sort={sort} />\r\n\r\n                                    {current.map((item, id) => <Item item={item} key={id} />)}\r\n\r\n                                </div>\r\n                                {isAuth.posts > page && <button className=\"buttonIncriment\" onClick={() => {\r\n                                    setPage(prevPage => prevPage + 1)\r\n                                }}>Lode more</button>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-action\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\n","import React from \"react\"\r\nimport { Items } from \"./components/items.jsx\"\r\nimport \"materialize-css\"\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"container\" >\r\n      <Items />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { applyMiddleware, combineReducers, createStore } from \"redux\"\r\nimport { composeWithDevTools } from \"redux-devtools-extension\"\r\nimport thunk from \"redux-thunk\"\r\nimport topikReducer from \"./pageRedu\"\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    topik: topikReducer,\r\n})\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { store } from \"./reducers\"\r\nimport { Provider } from \"react-redux\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}